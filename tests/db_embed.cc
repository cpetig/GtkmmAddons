/* generated by glademm-embed */

/* use it like 
 *   extern const unsigned char blau_jpeg_data[];
 *   extern const unsigned blau_jpeg_size;
 *
 *   Glib::RefPtr<Gdk::PixbufLoader> loader=Gdk::PixbufLoader::create();
 *   loader->write(blau_jpeg_data, blau_jpeg_size);
 *   loader->close();
 *   new Gtk::Image(loader->pixbuf);
 */

extern const unsigned char blau_jpeg_data[] = 
{	255,216,255,224,0,16,74,70,73,70,0,1,1,0,0,1,
	0,1,0,0,255,219,0,67,0,8,6,6,7,6,5,8,
	7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,
	19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,
	34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,
	57,61,56,50,60,46,51,52,50,255,219,0,67,1,9,9,
	9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,
	0,17,8,0,30,0,32,3,1,34,0,2,17,1,3,17,
	1,255,196,0,24,0,1,0,3,1,0,0,0,0,0,0,
	0,0,0,0,0,0,4,0,2,5,3,255,196,0,36,16,
	0,2,2,2,1,3,4,3,0,0,0,0,0,0,0,0,
	1,2,3,17,0,18,33,4,49,65,5,19,81,97,20,34,
	113,255,196,0,23,1,0,3,1,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,2,5,3,255,196,0,23,17,1,
	1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,
	1,17,18,255,218,0,12,3,1,0,2,17,3,17,0,63,
	0,206,157,221,213,7,180,168,161,104,215,159,188,49,137,24,
	11,61,135,243,39,230,238,195,155,177,219,58,199,172,138,90,
	82,90,187,107,197,101,252,70,196,246,225,93,101,98,117,242,
	189,206,31,170,233,228,8,53,81,163,155,4,140,70,144,117,
	139,174,242,158,168,26,43,116,43,44,9,145,26,55,63,164,
	99,128,79,56,189,65,140,4,147,91,228,15,187,197,67,213,
	58,33,179,66,170,240,114,54,205,101,64,3,227,42,178,208,
	32,243,154,88,99,35,234,2,155,44,193,135,145,223,58,207,
	234,113,180,30,212,96,187,121,102,21,153,98,98,167,181,252,
	101,145,154,87,231,19,128,255,217,
};
extern const unsigned blau_jpeg_size = 457;
/* generated by glademm-embed */

/* use it like 
 *   extern const unsigned char gelb_jpeg_data[];
 *   extern const unsigned gelb_jpeg_size;
 *
 *   Glib::RefPtr<Gdk::PixbufLoader> loader=Gdk::PixbufLoader::create();
 *   loader->write(gelb_jpeg_data, gelb_jpeg_size);
 *   loader->close();
 *   new Gtk::Image(loader->pixbuf);
 */

extern const unsigned char gelb_jpeg_data[] = 
{	255,216,255,224,0,16,74,70,73,70,0,1,1,0,0,1,
	0,1,0,0,255,219,0,67,0,8,6,6,7,6,5,8,
	7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,
	19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,
	34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,
	57,61,56,50,60,46,51,52,50,255,219,0,67,1,9,9,
	9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,
	0,17,8,0,32,0,30,3,1,34,0,2,17,1,3,17,
	1,255,196,0,25,0,0,2,3,1,0,0,0,0,0,0,
	0,0,0,0,0,0,2,4,0,1,3,7,255,196,0,31,
	16,0,2,2,2,2,3,1,0,0,0,0,0,0,0,0,
	0,1,2,0,17,3,49,18,33,34,35,65,81,255,196,0,
	23,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,
	0,0,1,0,5,6,255,196,0,24,17,1,0,3,1,0,
	0,0,0,0,0,0,0,0,0,0,0,0,1,2,17,81,
	255,218,0,12,3,1,0,2,17,3,17,0,63,0,234,217,
	51,233,107,113,83,129,243,63,38,106,2,90,150,201,236,110,
	128,212,54,99,149,188,44,9,199,195,65,69,147,18,82,172,
	89,152,187,19,93,124,140,100,74,80,32,1,196,104,84,113,
	15,26,216,163,175,201,178,176,3,168,11,169,98,170,16,145,
	216,113,213,197,92,169,99,100,136,89,26,204,197,156,3,64,
	66,214,225,199,255,217,
};
extern const unsigned gelb_jpeg_size = 390;
/* generated by glademm-embed */

/* use it like 
 *   extern const unsigned char gruen_jpeg_data[];
 *   extern const unsigned gruen_jpeg_size;
 *
 *   Glib::RefPtr<Gdk::PixbufLoader> loader=Gdk::PixbufLoader::create();
 *   loader->write(gruen_jpeg_data, gruen_jpeg_size);
 *   loader->close();
 *   new Gtk::Image(loader->pixbuf);
 */

extern const unsigned char gruen_jpeg_data[] = 
{	255,216,255,224,0,16,74,70,73,70,0,1,1,0,0,1,
	0,1,0,0,255,219,0,67,0,8,6,6,7,6,5,8,
	7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,
	19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,
	34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,
	57,61,56,50,60,46,51,52,50,255,219,0,67,1,9,9,
	9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,
	0,17,8,0,30,0,32,3,1,34,0,2,17,1,3,17,
	1,255,196,0,24,0,0,3,1,1,0,0,0,0,0,0,
	0,0,0,0,0,0,4,5,6,3,2,255,196,0,44,16,
	0,2,1,3,2,2,8,7,0,0,0,0,0,0,0,0,
	1,2,3,0,4,17,5,33,18,19,34,49,65,82,97,113,
	145,161,6,20,36,50,81,177,193,255,196,0,22,1,1,1,
	1,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,
	3,255,196,0,20,17,1,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,0,0,255,218,0,12,3,1,0,2,17,
	3,17,0,63,0,166,147,76,178,191,141,229,138,85,183,43,
	246,68,84,28,122,82,155,180,158,221,94,36,73,82,85,57,
	203,72,187,138,125,42,164,141,196,23,146,157,236,96,251,82,
	203,205,51,231,98,194,52,108,253,226,14,49,231,65,154,78,
	121,46,46,54,156,228,175,80,161,130,224,146,35,110,143,189,
	61,151,65,191,132,21,42,174,79,106,156,208,151,58,109,197,
	147,14,112,7,29,129,170,5,189,196,98,59,158,50,165,188,
	220,227,211,53,196,242,66,10,185,98,188,35,12,160,236,107,
	89,109,5,212,184,119,108,126,58,191,84,29,206,159,32,87,
	137,102,232,133,200,200,220,84,101,58,159,196,64,98,29,60,
	50,56,235,44,7,246,167,249,178,145,205,121,185,141,226,107,
	107,219,79,172,112,206,75,99,115,227,65,240,158,48,51,183,
	104,197,64,255,217,
};
extern const unsigned gruen_jpeg_size = 501;
/* generated by glademm-embed */

/* use it like 
 *   extern const unsigned char rot_jpeg_data[];
 *   extern const unsigned rot_jpeg_size;
 *
 *   Glib::RefPtr<Gdk::PixbufLoader> loader=Gdk::PixbufLoader::create();
 *   loader->write(rot_jpeg_data, rot_jpeg_size);
 *   loader->close();
 *   new Gtk::Image(loader->pixbuf);
 */

extern const unsigned char rot_jpeg_data[] = 
{	255,216,255,224,0,16,74,70,73,70,0,1,1,0,0,1,
	0,1,0,0,255,219,0,67,0,8,6,6,7,6,5,8,
	7,7,7,9,9,8,10,12,20,13,12,11,11,12,25,18,
	19,15,20,29,26,31,30,29,26,28,28,32,36,46,39,32,
	34,44,35,28,28,40,55,41,44,48,49,52,52,52,31,39,
	57,61,56,50,60,46,51,52,50,255,219,0,67,1,9,9,
	9,12,11,12,24,13,13,24,50,33,28,33,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,
	50,50,50,50,50,50,50,50,50,50,50,50,50,50,255,192,
	0,17,8,0,34,0,36,3,1,34,0,2,17,1,3,17,
	1,255,196,0,25,0,0,3,1,1,1,0,0,0,0,0,
	0,0,0,0,0,0,0,2,3,4,1,5,255,196,0,39,
	16,0,2,2,1,3,3,2,7,0,0,0,0,0,0,0,
	0,1,2,0,3,17,4,33,81,18,19,49,66,113,20,34,
	50,51,65,97,129,255,196,0,24,1,1,1,0,3,0,0,
	0,0,0,0,0,0,0,0,0,0,0,1,2,5,6,255,
	196,0,21,17,1,1,0,0,0,0,0,0,0,0,0,0,
	0,0,0,0,0,1,255,218,0,12,3,1,0,2,17,3,
	17,0,63,0,241,42,211,93,102,200,107,28,230,118,205,46,
	169,61,7,110,36,107,32,55,128,120,196,170,220,229,118,121,
	175,119,116,191,15,170,43,158,150,222,76,213,122,110,192,143,
	121,86,182,208,58,187,132,99,137,51,169,180,228,247,24,192,
	145,212,90,14,33,52,174,182,208,191,83,66,2,46,48,51,
	25,247,0,47,231,204,98,189,164,10,190,230,103,114,73,249,
	188,65,93,8,88,149,79,236,14,106,24,7,17,171,44,48,
	16,129,159,25,151,77,56,47,151,101,28,158,37,131,17,213,
	56,63,111,48,155,30,186,67,28,116,176,230,18,161,95,99,
	18,192,5,11,143,220,33,49,84,52,228,155,119,38,91,210,
	208,132,176,78,16,132,163,255,217,
};
extern const unsigned rot_jpeg_size = 473;
